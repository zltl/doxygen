digraph "ExprAst"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="ExprAst",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Base class for all nodes in the abstract syntax tree of an expression."];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid"];
  Node2 [label="ExprAstBinary",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dc/d11/class_expr_ast_binary.html",tooltip="Class representing a binary operator in the AST."];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid"];
  Node3 [label="ExprAstFilter",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d4/d32/class_expr_ast_filter.html",tooltip="Class representing a filter in the AST."];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid"];
  Node4 [label="ExprAstFilterAppl",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d3/dce/class_expr_ast_filter_appl.html",tooltip="Class representing a filter applied to an expression in the AST."];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid"];
  Node5 [label="ExprAstFunctionVariable",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d1/da7/class_expr_ast_function_variable.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid"];
  Node6 [label="ExprAstLiteral",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d0/d31/class_expr_ast_literal.html",tooltip="Class representing a string literal in the AST."];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid"];
  Node7 [label="ExprAstNegate",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$d5/d4c/class_expr_ast_negate.html",tooltip="Class representing a negation (not) operator in the AST."];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid"];
  Node8 [label="ExprAstNumber",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$de/d0a/class_expr_ast_number.html",tooltip="Class representing a number in the AST."];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid"];
  Node9 [label="ExprAstUnary",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$dc/db5/class_expr_ast_unary.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="steelblue1",style="solid"];
  Node10 [label="ExprAstVariable",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$de/dc0/class_expr_ast_variable.html",tooltip="Class representing a variable in the AST."];
}
